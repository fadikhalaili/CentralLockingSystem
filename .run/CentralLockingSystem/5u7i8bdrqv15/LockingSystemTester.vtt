<?xml version="1.0" encoding="utf-8"?>
<!--Vector Test Table Editor-->
<ttroot version="24" minRequiredVersion="20" minRequiredCANoe="CANoe 12.0" minRequiredCANoeVersion="CANoe 12.0 SP3" xmlns="http://www.vector-informatik.de/ITE/TestTable/1.0">
  <tt>
    <variables />
    <tg navid="0e470484-e34d-4eb1-b8f8-47616d059ed8">
      <title>Test static requirements of the door control unit</title>
      <tc>
        <title>Lock statically</title>
        <tcid>6e13ea63-00fe-49c3-98f5-65bc5761b4a2</tcid>
        <attributes>
          <attr>
            <key>Lifecycle</key>
            <value>finished</value>
          </attr>
          <attr>
            <key>Note</key>
            <value />
          </attr>
        </attributes>
        <traceitems>
          <traceitem>TraceItem_BEGIN_OF_OBJECT|1|a31342c143aea0ddc86623|END_OF_OBJECT_TraceItem|</traceitem>
        </traceitems>
        <variables />
        <preparation>
          <title />
          <set>
            <title>Initialize all signals</title>
            <in>
              <assignment>
                <sink>
                  <dbobject>DBSignal_BEGIN_OF_OBJECT|1|NodeOrFrameData_BEGIN_OF_OBJECT|1|1|CAN|2|comfort||END_OF_OBJECT_NodeOrFrameData|FrameData_BEGIN_OF_OBJECT|1|255|255|0|0|VehicleMotion|50|False|END_OF_OBJECT_FrameData|EngineRunning|1|END_OF_OBJECT_|</dbobject>
                </sink>
                <source>
                  <const>0</const>
                </source>
              </assignment>
              <assignment>
                <sink>
                  <dbobject>DBSignal_BEGIN_OF_OBJECT|1|NodeOrFrameData_BEGIN_OF_OBJECT|1|1|CAN|1|comfort|SUT_Driver|END_OF_OBJECT_NodeOrFrameData|FrameData_BEGIN_OF_OBJECT|1|255|255|0|0|VehicleMotion|50|False|END_OF_OBJECT_FrameData|Velocity|1|END_OF_OBJECT_|</dbobject>
                </sink>
                <source>
                  <const>0</const>
                </source>
              </assignment>
              <assignment>
                <sink>
                  <dbobject>DBSignal_BEGIN_OF_OBJECT|1|NodeOrFrameData_BEGIN_OF_OBJECT|1|1|CAN|1|comfort|SUT_Driver|END_OF_OBJECT_NodeOrFrameData|FrameData_BEGIN_OF_OBJECT|1|255|255|0|0|VehicleMotion|50|False|END_OF_OBJECT_FrameData|CrashDetected|1|END_OF_OBJECT_|</dbobject>
                </sink>
                <source>
                  <const>0</const>
                </source>
              </assignment>
              <assignment>
                <sink>
                  <dbobject>DBSignal_BEGIN_OF_OBJECT|1|NodeOrFrameData_BEGIN_OF_OBJECT|1|1|CAN|1|comfort|SUT_Driver|END_OF_OBJECT_NodeOrFrameData|FrameData_BEGIN_OF_OBJECT|1|255|255|0|0|LockingRemoteControlRequest|1|False|END_OF_OBJECT_FrameData|LockRequest|1|END_OF_OBJECT_|</dbobject>
                </sink>
                <source>
                  <valuetable_entry>idle</valuetable_entry>
                </source>
              </assignment>
            </in>
          </set>
          <wait>
            <title />
            <time>
              <value>
                <const>500</const>
              </value>
              <unit>ms</unit>
            </time>
          </wait>
        </preparation>
        <statechange>
          <title>Ensure initial state 'Unlocked'</title>
          <in>
            <assignment>
              <sink>
                <dbobject>DBSignal_BEGIN_OF_OBJECT|1|NodeOrFrameData_BEGIN_OF_OBJECT|1|1|CAN|2|comfort||END_OF_OBJECT_NodeOrFrameData|FrameData_BEGIN_OF_OBJECT|1|255|255|0|0|LockingRemoteControlRequest|1|False|END_OF_OBJECT_FrameData|LockRequest|1|END_OF_OBJECT_|</dbobject>
              </sink>
              <source>
                <valuetable_entry>Request_unlock</valuetable_entry>
              </source>
            </assignment>
          </in>
          <wait>
            <value>
              <const>200</const>
            </value>
            <unit>ms</unit>
          </wait>
          <expected>
            <compare>
              <value>
                <dbobject>DBSignal_BEGIN_OF_OBJECT|1|NodeOrFrameData_BEGIN_OF_OBJECT|1|1|CAN|2|comfort||END_OF_OBJECT_NodeOrFrameData|FrameData_BEGIN_OF_OBJECT|1|255|255|0|0|CentralLockingSystemState|0|False|END_OF_OBJECT_FrameData|LockState|1|END_OF_OBJECT_|</dbobject>
              </value>
              <eq>
                <valuetable_entry>Unlocked</valuetable_entry>
              </eq>
            </compare>
          </expected>
        </statechange>
        <statechange>
          <title>Request to lock the car (engine off). Check if the car is locked.</title>
          <in>
            <assignment>
              <sink>
                <dbobject>DBSignal_BEGIN_OF_OBJECT|1|NodeOrFrameData_BEGIN_OF_OBJECT|1|1|CAN|2|comfort||END_OF_OBJECT_NodeOrFrameData|FrameData_BEGIN_OF_OBJECT|1|255|255|0|0|VehicleMotion|50|False|END_OF_OBJECT_FrameData|EngineRunning|1|END_OF_OBJECT_|</dbobject>
              </sink>
              <source>
                <const>0</const>
              </source>
            </assignment>
            <assignment>
              <sink>
                <dbobject>DBSignal_BEGIN_OF_OBJECT|1|NodeOrFrameData_BEGIN_OF_OBJECT|1|1|CAN|1|comfort|SUT_Driver|END_OF_OBJECT_NodeOrFrameData|FrameData_BEGIN_OF_OBJECT|1|255|255|0|0|VehicleMotion|50|False|END_OF_OBJECT_FrameData|Velocity|1|END_OF_OBJECT_|</dbobject>
              </sink>
              <source>
                <const>0</const>
              </source>
            </assignment>
            <assignment>
              <sink>
                <dbobject>DBSignal_BEGIN_OF_OBJECT|1|NodeOrFrameData_BEGIN_OF_OBJECT|1|1|CAN|1|comfort|SUT_Driver|END_OF_OBJECT_NodeOrFrameData|FrameData_BEGIN_OF_OBJECT|1|255|255|0|0|VehicleMotion|50|False|END_OF_OBJECT_FrameData|CrashDetected|1|END_OF_OBJECT_|</dbobject>
              </sink>
              <source>
                <const>0</const>
              </source>
            </assignment>
            <assignment>
              <sink>
                <dbobject>DBSignal_BEGIN_OF_OBJECT|1|NodeOrFrameData_BEGIN_OF_OBJECT|1|1|CAN|1|comfort|SUT_Driver|END_OF_OBJECT_NodeOrFrameData|FrameData_BEGIN_OF_OBJECT|1|255|255|0|0|LockingRemoteControlRequest|1|False|END_OF_OBJECT_FrameData|LockRequest|1|END_OF_OBJECT_|</dbobject>
              </sink>
              <source>
                <valuetable_entry>Request_lock</valuetable_entry>
              </source>
            </assignment>
          </in>
          <wait>
            <value>
              <dbobject>ChParScalar_BEGIN_OF_OBJECT|1|LockingTests::LockRequestWaitTime|END_OF_OBJECT_ChParScalar|</dbobject>
            </value>
            <unit>ms</unit>
          </wait>
          <expected>
            <compare>
              <value>
                <dbobject>DBSignal_BEGIN_OF_OBJECT|1|NodeOrFrameData_BEGIN_OF_OBJECT|1|1|CAN|2|comfort||END_OF_OBJECT_NodeOrFrameData|FrameData_BEGIN_OF_OBJECT|1|255|255|0|0|CentralLockingSystemState|0|False|END_OF_OBJECT_FrameData|LockState|1|END_OF_OBJECT_|</dbobject>
              </value>
              <eq>
                <valuetable_entry>Locked</valuetable_entry>
              </eq>
            </compare>
          </expected>
        </statechange>
        <statechange>
          <title>Request to lock the car (engine running). Check if the car is locked.</title>
          <in>
            <assignment>
              <sink>
                <dbobject>DBSignal_BEGIN_OF_OBJECT|1|NodeOrFrameData_BEGIN_OF_OBJECT|1|1|CAN|2|comfort||END_OF_OBJECT_NodeOrFrameData|FrameData_BEGIN_OF_OBJECT|1|255|255|0|0|VehicleMotion|50|False|END_OF_OBJECT_FrameData|EngineRunning|1|END_OF_OBJECT_|</dbobject>
              </sink>
              <source>
                <const>1</const>
              </source>
            </assignment>
            <assignment>
              <sink>
                <dbobject>DBSignal_BEGIN_OF_OBJECT|1|NodeOrFrameData_BEGIN_OF_OBJECT|1|1|CAN|2|comfort||END_OF_OBJECT_NodeOrFrameData|FrameData_BEGIN_OF_OBJECT|1|255|255|0|0|VehicleMotion|50|False|END_OF_OBJECT_FrameData|Velocity|1|END_OF_OBJECT_|</dbobject>
              </sink>
              <source>
                <const>0</const>
              </source>
            </assignment>
            <assignment>
              <sink>
                <dbobject>DBSignal_BEGIN_OF_OBJECT|1|NodeOrFrameData_BEGIN_OF_OBJECT|1|1|CAN|1|comfort|SUT_Driver|END_OF_OBJECT_NodeOrFrameData|FrameData_BEGIN_OF_OBJECT|1|255|255|0|0|VehicleMotion|50|False|END_OF_OBJECT_FrameData|CrashDetected|1|END_OF_OBJECT_|</dbobject>
              </sink>
              <source>
                <const>0</const>
              </source>
            </assignment>
            <assignment>
              <sink>
                <dbobject>DBSignal_BEGIN_OF_OBJECT|1|NodeOrFrameData_BEGIN_OF_OBJECT|1|1|CAN|1|comfort|SUT_Driver|END_OF_OBJECT_NodeOrFrameData|FrameData_BEGIN_OF_OBJECT|1|255|255|0|0|LockingRemoteControlRequest|1|False|END_OF_OBJECT_FrameData|LockRequest|1|END_OF_OBJECT_|</dbobject>
              </sink>
              <source>
                <valuetable_entry>Request_lock</valuetable_entry>
              </source>
            </assignment>
          </in>
          <wait>
            <value>
              <dbobject>ChParScalar_BEGIN_OF_OBJECT|1|LockingTests::LockRequestWaitTime|END_OF_OBJECT_ChParScalar|</dbobject>
            </value>
            <unit>ms</unit>
          </wait>
          <expected>
            <compare>
              <value>
                <dbobject>DBSignal_BEGIN_OF_OBJECT|1|NodeOrFrameData_BEGIN_OF_OBJECT|1|1|CAN|2|comfort||END_OF_OBJECT_NodeOrFrameData|FrameData_BEGIN_OF_OBJECT|1|255|255|0|0|CentralLockingSystemState|0|False|END_OF_OBJECT_FrameData|LockState|1|END_OF_OBJECT_|</dbobject>
              </value>
              <eq>
                <valuetable_entry>Locked</valuetable_entry>
              </eq>
            </compare>
          </expected>
        </statechange>
        <completion>
          <title />
          <set>
            <title>Reset all signals</title>
            <in>
              <assignment>
                <sink>
                  <dbobject>DBSignal_BEGIN_OF_OBJECT|1|NodeOrFrameData_BEGIN_OF_OBJECT|1|1|CAN|2|comfort||END_OF_OBJECT_NodeOrFrameData|FrameData_BEGIN_OF_OBJECT|1|255|255|0|0|VehicleMotion|50|False|END_OF_OBJECT_FrameData|EngineRunning|1|END_OF_OBJECT_|</dbobject>
                </sink>
                <source>
                  <const>0</const>
                </source>
              </assignment>
              <assignment>
                <sink>
                  <dbobject>DBSignal_BEGIN_OF_OBJECT|1|NodeOrFrameData_BEGIN_OF_OBJECT|1|1|CAN|1|comfort|SUT_Driver|END_OF_OBJECT_NodeOrFrameData|FrameData_BEGIN_OF_OBJECT|1|255|255|0|0|VehicleMotion|50|False|END_OF_OBJECT_FrameData|Velocity|1|END_OF_OBJECT_|</dbobject>
                </sink>
                <source>
                  <const>0</const>
                </source>
              </assignment>
              <assignment>
                <sink>
                  <dbobject>DBSignal_BEGIN_OF_OBJECT|1|NodeOrFrameData_BEGIN_OF_OBJECT|1|1|CAN|1|comfort|SUT_Driver|END_OF_OBJECT_NodeOrFrameData|FrameData_BEGIN_OF_OBJECT|1|255|255|0|0|VehicleMotion|50|False|END_OF_OBJECT_FrameData|CrashDetected|1|END_OF_OBJECT_|</dbobject>
                </sink>
                <source>
                  <const>0</const>
                </source>
              </assignment>
              <assignment>
                <sink>
                  <dbobject>DBSignal_BEGIN_OF_OBJECT|1|NodeOrFrameData_BEGIN_OF_OBJECT|1|1|CAN|1|comfort|SUT_Driver|END_OF_OBJECT_NodeOrFrameData|FrameData_BEGIN_OF_OBJECT|1|255|255|0|0|LockingRemoteControlRequest|1|False|END_OF_OBJECT_FrameData|LockRequest|1|END_OF_OBJECT_|</dbobject>
                </sink>
                <source>
                  <valuetable_entry>idle</valuetable_entry>
                </source>
              </assignment>
            </in>
          </set>
          <wait>
            <title />
            <time>
              <value>
                <const>500</const>
              </value>
              <unit>ms</unit>
            </time>
          </wait>
        </completion>
      </tc>
      <tc>
        <title>Unlock statically</title>
        <tcid>260a23b1-1fa5-4655-81a3-3690dbc99970</tcid>
        <attributes>
          <attr>
            <key>Lifecycle</key>
            <value>finished</value>
          </attr>
          <attr>
            <key>Note</key>
            <value />
          </attr>
        </attributes>
        <traceitems>
          <traceitem>TraceItem_BEGIN_OF_OBJECT|1|a31342c143aea0ddc86629|END_OF_OBJECT_TraceItem|</traceitem>
        </traceitems>
        <variables />
        <preparation>
          <title />
          <set>
            <title>Initialize all signals</title>
            <in>
              <assignment>
                <sink>
                  <dbobject>DBSignal_BEGIN_OF_OBJECT|1|NodeOrFrameData_BEGIN_OF_OBJECT|1|1|CAN|2|comfort||END_OF_OBJECT_NodeOrFrameData|FrameData_BEGIN_OF_OBJECT|1|255|255|0|0|VehicleMotion|50|False|END_OF_OBJECT_FrameData|EngineRunning|1|END_OF_OBJECT_|</dbobject>
                </sink>
                <source>
                  <const>0</const>
                </source>
              </assignment>
              <assignment>
                <sink>
                  <dbobject>DBSignal_BEGIN_OF_OBJECT|1|NodeOrFrameData_BEGIN_OF_OBJECT|1|1|CAN|1|comfort|SUT_Driver|END_OF_OBJECT_NodeOrFrameData|FrameData_BEGIN_OF_OBJECT|1|255|255|0|0|VehicleMotion|50|False|END_OF_OBJECT_FrameData|Velocity|1|END_OF_OBJECT_|</dbobject>
                </sink>
                <source>
                  <const>0</const>
                </source>
              </assignment>
              <assignment>
                <sink>
                  <dbobject>DBSignal_BEGIN_OF_OBJECT|1|NodeOrFrameData_BEGIN_OF_OBJECT|1|1|CAN|1|comfort|SUT_Driver|END_OF_OBJECT_NodeOrFrameData|FrameData_BEGIN_OF_OBJECT|1|255|255|0|0|VehicleMotion|50|False|END_OF_OBJECT_FrameData|CrashDetected|1|END_OF_OBJECT_|</dbobject>
                </sink>
                <source>
                  <const>0</const>
                </source>
              </assignment>
              <assignment>
                <sink>
                  <dbobject>DBSignal_BEGIN_OF_OBJECT|1|NodeOrFrameData_BEGIN_OF_OBJECT|1|1|CAN|1|comfort|SUT_Driver|END_OF_OBJECT_NodeOrFrameData|FrameData_BEGIN_OF_OBJECT|1|255|255|0|0|LockingRemoteControlRequest|1|False|END_OF_OBJECT_FrameData|LockRequest|1|END_OF_OBJECT_|</dbobject>
                </sink>
                <source>
                  <valuetable_entry>idle</valuetable_entry>
                </source>
              </assignment>
            </in>
          </set>
          <wait>
            <title />
            <time>
              <value>
                <const>500</const>
              </value>
              <unit>ms</unit>
            </time>
          </wait>
        </preparation>
        <statechange>
          <title>Ensure initial state 'Locked'</title>
          <in>
            <assignment>
              <sink>
                <dbobject>DBSignal_BEGIN_OF_OBJECT|1|NodeOrFrameData_BEGIN_OF_OBJECT|1|1|CAN|2|comfort||END_OF_OBJECT_NodeOrFrameData|FrameData_BEGIN_OF_OBJECT|1|255|255|0|0|LockingRemoteControlRequest|1|False|END_OF_OBJECT_FrameData|LockRequest|1|END_OF_OBJECT_|</dbobject>
              </sink>
              <source>
                <valuetable_entry>Request_lock</valuetable_entry>
              </source>
            </assignment>
          </in>
          <wait>
            <value>
              <const>200</const>
            </value>
            <unit>ms</unit>
          </wait>
          <expected>
            <compare>
              <value>
                <dbobject>DBSignal_BEGIN_OF_OBJECT|1|NodeOrFrameData_BEGIN_OF_OBJECT|1|1|CAN|2|comfort||END_OF_OBJECT_NodeOrFrameData|FrameData_BEGIN_OF_OBJECT|1|255|255|0|0|CentralLockingSystemState|0|False|END_OF_OBJECT_FrameData|LockState|1|END_OF_OBJECT_|</dbobject>
              </value>
              <eq>
                <valuetable_entry>Locked</valuetable_entry>
              </eq>
            </compare>
          </expected>
        </statechange>
        <statechange>
          <title>Request to unlock the car (engine off). Check if the car will be unlocked.</title>
          <in>
            <assignment>
              <sink>
                <dbobject>DBSignal_BEGIN_OF_OBJECT|1|NodeOrFrameData_BEGIN_OF_OBJECT|1|1|CAN|2|comfort||END_OF_OBJECT_NodeOrFrameData|FrameData_BEGIN_OF_OBJECT|1|255|255|0|0|VehicleMotion|50|False|END_OF_OBJECT_FrameData|EngineRunning|1|END_OF_OBJECT_|</dbobject>
              </sink>
              <source>
                <const>0</const>
              </source>
            </assignment>
            <assignment>
              <sink>
                <dbobject>DBSignal_BEGIN_OF_OBJECT|1|NodeOrFrameData_BEGIN_OF_OBJECT|1|1|CAN|2|comfort||END_OF_OBJECT_NodeOrFrameData|FrameData_BEGIN_OF_OBJECT|1|255|255|0|0|VehicleMotion|50|False|END_OF_OBJECT_FrameData|Velocity|1|END_OF_OBJECT_|</dbobject>
              </sink>
              <source>
                <const>0</const>
              </source>
            </assignment>
            <assignment>
              <sink>
                <dbobject>DBSignal_BEGIN_OF_OBJECT|1|NodeOrFrameData_BEGIN_OF_OBJECT|1|1|CAN|1|comfort|SUT_Driver|END_OF_OBJECT_NodeOrFrameData|FrameData_BEGIN_OF_OBJECT|1|255|255|0|0|VehicleMotion|50|False|END_OF_OBJECT_FrameData|CrashDetected|1|END_OF_OBJECT_|</dbobject>
              </sink>
              <source>
                <const>0</const>
              </source>
            </assignment>
            <assignment>
              <sink>
                <dbobject>DBSignal_BEGIN_OF_OBJECT|1|NodeOrFrameData_BEGIN_OF_OBJECT|1|1|CAN|1|comfort|SUT_Driver|END_OF_OBJECT_NodeOrFrameData|FrameData_BEGIN_OF_OBJECT|1|255|255|0|0|LockingRemoteControlRequest|1|False|END_OF_OBJECT_FrameData|LockRequest|1|END_OF_OBJECT_|</dbobject>
              </sink>
              <source>
                <valuetable_entry>Request_unlock</valuetable_entry>
              </source>
            </assignment>
          </in>
          <wait>
            <value>
              <dbobject>ChParScalar_BEGIN_OF_OBJECT|1|LockingTests::LockRequestWaitTime|END_OF_OBJECT_ChParScalar|</dbobject>
            </value>
            <unit>ms</unit>
          </wait>
          <expected>
            <compare>
              <value>
                <dbobject>DBSignal_BEGIN_OF_OBJECT|1|NodeOrFrameData_BEGIN_OF_OBJECT|1|1|CAN|2|comfort||END_OF_OBJECT_NodeOrFrameData|FrameData_BEGIN_OF_OBJECT|1|255|255|0|0|CentralLockingSystemState|0|False|END_OF_OBJECT_FrameData|LockState|1|END_OF_OBJECT_|</dbobject>
              </value>
              <eq>
                <valuetable_entry>Unlocked</valuetable_entry>
              </eq>
            </compare>
          </expected>
        </statechange>
        <statechange>
          <title>Request to unlock the car (engine running). Check if the car will be unlocked.</title>
          <in>
            <assignment>
              <sink>
                <dbobject>DBSignal_BEGIN_OF_OBJECT|1|NodeOrFrameData_BEGIN_OF_OBJECT|1|1|CAN|2|comfort||END_OF_OBJECT_NodeOrFrameData|FrameData_BEGIN_OF_OBJECT|1|255|255|0|0|VehicleMotion|50|False|END_OF_OBJECT_FrameData|EngineRunning|1|END_OF_OBJECT_|</dbobject>
              </sink>
              <source>
                <const>1</const>
              </source>
            </assignment>
            <assignment>
              <sink>
                <dbobject>DBSignal_BEGIN_OF_OBJECT|1|NodeOrFrameData_BEGIN_OF_OBJECT|1|1|CAN|2|comfort||END_OF_OBJECT_NodeOrFrameData|FrameData_BEGIN_OF_OBJECT|1|255|255|0|0|VehicleMotion|50|False|END_OF_OBJECT_FrameData|Velocity|1|END_OF_OBJECT_|</dbobject>
              </sink>
              <source>
                <const>0</const>
              </source>
            </assignment>
            <assignment>
              <sink>
                <dbobject>DBSignal_BEGIN_OF_OBJECT|1|NodeOrFrameData_BEGIN_OF_OBJECT|1|1|CAN|1|comfort|SUT_Driver|END_OF_OBJECT_NodeOrFrameData|FrameData_BEGIN_OF_OBJECT|1|255|255|0|0|VehicleMotion|50|False|END_OF_OBJECT_FrameData|CrashDetected|1|END_OF_OBJECT_|</dbobject>
              </sink>
              <source>
                <const>0</const>
              </source>
            </assignment>
            <assignment>
              <sink>
                <dbobject>DBSignal_BEGIN_OF_OBJECT|1|NodeOrFrameData_BEGIN_OF_OBJECT|1|1|CAN|1|comfort|SUT_Driver|END_OF_OBJECT_NodeOrFrameData|FrameData_BEGIN_OF_OBJECT|1|255|255|0|0|LockingRemoteControlRequest|1|False|END_OF_OBJECT_FrameData|LockRequest|1|END_OF_OBJECT_|</dbobject>
              </sink>
              <source>
                <valuetable_entry>Request_unlock</valuetable_entry>
              </source>
            </assignment>
          </in>
          <wait>
            <value>
              <dbobject>ChParScalar_BEGIN_OF_OBJECT|1|LockingTests::LockRequestWaitTime|END_OF_OBJECT_ChParScalar|</dbobject>
            </value>
            <unit>ms</unit>
          </wait>
          <expected>
            <compare>
              <value>
                <dbobject>DBSignal_BEGIN_OF_OBJECT|1|NodeOrFrameData_BEGIN_OF_OBJECT|1|1|CAN|2|comfort||END_OF_OBJECT_NodeOrFrameData|FrameData_BEGIN_OF_OBJECT|1|255|255|0|0|CentralLockingSystemState|0|False|END_OF_OBJECT_FrameData|LockState|1|END_OF_OBJECT_|</dbobject>
              </value>
              <eq>
                <valuetable_entry>Unlocked</valuetable_entry>
              </eq>
            </compare>
          </expected>
        </statechange>
        <completion>
          <title />
          <set>
            <title>Reset all signals</title>
            <in>
              <assignment>
                <sink>
                  <dbobject>DBSignal_BEGIN_OF_OBJECT|1|NodeOrFrameData_BEGIN_OF_OBJECT|1|1|CAN|2|comfort||END_OF_OBJECT_NodeOrFrameData|FrameData_BEGIN_OF_OBJECT|1|255|255|0|0|VehicleMotion|50|False|END_OF_OBJECT_FrameData|EngineRunning|1|END_OF_OBJECT_|</dbobject>
                </sink>
                <source>
                  <const>0</const>
                </source>
              </assignment>
              <assignment>
                <sink>
                  <dbobject>DBSignal_BEGIN_OF_OBJECT|1|NodeOrFrameData_BEGIN_OF_OBJECT|1|1|CAN|1|comfort|SUT_Driver|END_OF_OBJECT_NodeOrFrameData|FrameData_BEGIN_OF_OBJECT|1|255|255|0|0|VehicleMotion|50|False|END_OF_OBJECT_FrameData|Velocity|1|END_OF_OBJECT_|</dbobject>
                </sink>
                <source>
                  <const>0</const>
                </source>
              </assignment>
              <assignment>
                <sink>
                  <dbobject>DBSignal_BEGIN_OF_OBJECT|1|NodeOrFrameData_BEGIN_OF_OBJECT|1|1|CAN|1|comfort|SUT_Driver|END_OF_OBJECT_NodeOrFrameData|FrameData_BEGIN_OF_OBJECT|1|255|255|0|0|VehicleMotion|50|False|END_OF_OBJECT_FrameData|CrashDetected|1|END_OF_OBJECT_|</dbobject>
                </sink>
                <source>
                  <const>0</const>
                </source>
              </assignment>
              <assignment>
                <sink>
                  <dbobject>DBSignal_BEGIN_OF_OBJECT|1|NodeOrFrameData_BEGIN_OF_OBJECT|1|1|CAN|1|comfort|SUT_Driver|END_OF_OBJECT_NodeOrFrameData|FrameData_BEGIN_OF_OBJECT|1|255|255|0|0|LockingRemoteControlRequest|1|False|END_OF_OBJECT_FrameData|LockRequest|1|END_OF_OBJECT_|</dbobject>
                </sink>
                <source>
                  <valuetable_entry>idle</valuetable_entry>
                </source>
              </assignment>
            </in>
          </set>
          <wait>
            <title />
            <time>
              <value>
                <const>500</const>
              </value>
              <unit>ms</unit>
            </time>
          </wait>
        </completion>
      </tc>
      <nettestcaselist>
        <title>Crash detection while engine is moving</title>
        <name>CrashDetection</name>
        <class>LockingTestLibrary</class>
        <assembly />
        <combinatorics>combinatorial</combinatorics>
        <structlistparameter />
        <param>
          <type>int</type>
          <valuelist>
            <value>
              <const>0</const>
            </value>
            <value>
              <const>1</const>
            </value>
          </valuelist>
        </param>
        <param>
          <type>Double</type>
          <valuelist>
            <value>
              <const>40.0</const>
            </value>
            <value>
              <const>60.0</const>
            </value>
          </valuelist>
        </param>
        <tcid>17b5cd7d-33c3-484f-8c2b-b780687b2617</tcid>
        <attributes>
          <attr>
            <key>Lifecycle</key>
            <value>reopened</value>
          </attr>
          <attr>
            <key>Note</key>
            <value>Use parameters from parameter file instead of single values</value>
          </attr>
        </attributes>
        <traceitems>
          <traceitem>TraceItem_BEGIN_OF_OBJECT|1|a31342c143aea0ddc86641|END_OF_OBJECT_TraceItem|</traceitem>
        </traceitems>
      </nettestcaselist>
    </tg>
    <tf navid="c7cbd412-1e72-4e8e-80f9-dd5b3dc6ff62">
      <title>Test velocity dependent requirements of the door control unit</title>
      <active>true</active>
      <preparation>
        <title />
        <cycletime_abs>
          <title>Check max. cycle time of message 'CentralLockingSystemState' 110 ms</title>
          <checkid />
          <message>
            <canmsg>
              <dbobject>DBFrameOrPDU_BEGIN_OF_OBJECT|2|NodeOrFrameData_BEGIN_OF_OBJECT|1|1|CAN|1|comfort|SUT|END_OF_OBJECT_NodeOrFrameData|FrameData_BEGIN_OF_OBJECT|1|255|255|0|0|CentralLockingSystemState|0|False|END_OF_OBJECT_FrameData|4|0|END_OF_OBJECT_|</dbobject>
            </canmsg>
          </message>
          <max>
            <value>
              <const>110</const>
            </value>
            <unit>ms</unit>
          </max>
        </cycletime_abs>
      </preparation>
      <tc>
        <title>Lock by increasing velocity</title>
        <tcid>3ba95eed-f642-44dd-bab3-ff98ce81c8f7</tcid>
        <attributes>
          <attr>
            <key>Lifecycle</key>
            <value>finished</value>
          </attr>
          <attr>
            <key>Note</key>
            <value />
          </attr>
        </attributes>
        <traceitems>
          <traceitem>TraceItem_BEGIN_OF_OBJECT|1|a31342c143aea0ddc86635|END_OF_OBJECT_TraceItem|</traceitem>
        </traceitems>
        <variables />
        <preparation>
          <title />
          <ttfunction>
            <title>Initialize all signals</title>
            <name>ResetSignals</name>
          </ttfunction>
          <statechange>
            <title>Ensure initial state 'Unlocked'</title>
            <in>
              <assignment>
                <sink>
                  <dbobject>DBSignal_BEGIN_OF_OBJECT|1|NodeOrFrameData_BEGIN_OF_OBJECT|1|1|CAN|2|comfort||END_OF_OBJECT_NodeOrFrameData|FrameData_BEGIN_OF_OBJECT|1|255|255|0|0|LockingRemoteControlRequest|1|False|END_OF_OBJECT_FrameData|LockRequest|1|END_OF_OBJECT_|</dbobject>
                </sink>
                <source>
                  <valuetable_entry>Request_unlock</valuetable_entry>
                </source>
              </assignment>
            </in>
            <wait>
              <value>
                <const>200</const>
              </value>
              <unit>ms</unit>
            </wait>
            <expected>
              <compare>
                <value>
                  <dbobject>DBSignal_BEGIN_OF_OBJECT|1|NodeOrFrameData_BEGIN_OF_OBJECT|1|1|CAN|2|comfort||END_OF_OBJECT_NodeOrFrameData|FrameData_BEGIN_OF_OBJECT|1|255|255|0|0|CentralLockingSystemState|0|False|END_OF_OBJECT_FrameData|LockState|1|END_OF_OBJECT_|</dbobject>
                </value>
                <eq>
                  <valuetable_entry>Unlocked</valuetable_entry>
                </eq>
              </compare>
            </expected>
          </statechange>
        </preparation>
        <set>
          <title>Start engine</title>
          <in>
            <assignment>
              <sink>
                <dbobject>DBSignal_BEGIN_OF_OBJECT|1|NodeOrFrameData_BEGIN_OF_OBJECT|1|1|CAN|1|comfort|SUT_Driver|END_OF_OBJECT_NodeOrFrameData|FrameData_BEGIN_OF_OBJECT|1|255|255|0|0|VehicleMotion|50|False|END_OF_OBJECT_FrameData|EngineRunning|1|END_OF_OBJECT_|</dbobject>
              </sink>
              <source>
                <const>1</const>
              </source>
            </assignment>
          </in>
        </set>
        <caplfunction>
          <title>Accelerate to velocity lower than the lock-velocity</title>
          <name>AccelerateDecelerateToTargetSpeed</name>
          <param>
            <type>float</type>
            <value>
              <const>20</const>
            </value>
          </param>
        </caplfunction>
        <wait>
          <title />
          <time>
            <value>
              <const>500</const>
            </value>
            <unit>ms</unit>
          </time>
        </wait>
        <statecheck>
          <title>Check no automatic lock with velocity lower than the lock-velocity</title>
          <expected>
            <compare>
              <value>
                <dbobject>DBSignal_BEGIN_OF_OBJECT|1|NodeOrFrameData_BEGIN_OF_OBJECT|1|1|CAN|2|comfort||END_OF_OBJECT_NodeOrFrameData|FrameData_BEGIN_OF_OBJECT|1|255|255|0|0|CentralLockingSystemState|0|False|END_OF_OBJECT_FrameData|LockState|1|END_OF_OBJECT_|</dbobject>
              </value>
              <eq>
                <valuetable_entry>Unlocked</valuetable_entry>
              </eq>
            </compare>
          </expected>
        </statecheck>
        <caplfunction>
          <title>Accelerate to velocity higher than lock-velocity</title>
          <name>AccelerateDecelerateToTargetSpeed</name>
          <param>
            <type>float</type>
            <value>
              <const>60</const>
            </value>
          </param>
        </caplfunction>
        <wait>
          <title />
          <time>
            <value>
              <const>500</const>
            </value>
            <unit>ms</unit>
          </time>
        </wait>
        <statecheck>
          <title>Check automatic lock with velocity higher than lock-velocity</title>
          <expected>
            <compare>
              <value>
                <dbobject>DBSignal_BEGIN_OF_OBJECT|1|NodeOrFrameData_BEGIN_OF_OBJECT|1|1|CAN|2|comfort||END_OF_OBJECT_NodeOrFrameData|FrameData_BEGIN_OF_OBJECT|1|255|255|0|0|CentralLockingSystemState|0|False|END_OF_OBJECT_FrameData|LockState|1|END_OF_OBJECT_|</dbobject>
              </value>
              <eq>
                <valuetable_entry>Locked</valuetable_entry>
              </eq>
            </compare>
          </expected>
        </statecheck>
        <caplfunction>
          <title>Decelerate until stopped</title>
          <name>AccelerateDecelerateToTargetSpeed</name>
          <param>
            <type>float</type>
            <value>
              <const>0</const>
            </value>
          </param>
        </caplfunction>
        <completion>
          <title />
          <ttfunction>
            <title>Reset all signals</title>
            <name>ResetSignals</name>
          </ttfunction>
        </completion>
      </tc>
      <tc>
        <title>No unlock when slowing down</title>
        <active>true</active>
        <tcid>5df607e7-bfb1-490a-8176-e484476255a9</tcid>
        <attributes>
          <attr>
            <key>Lifecycle</key>
            <value>finished</value>
          </attr>
          <attr>
            <key>Note</key>
            <value />
          </attr>
        </attributes>
        <traceitems>
          <traceitem>TraceItem_BEGIN_OF_OBJECT|1|a31342c143aea0ddc8663b|END_OF_OBJECT_TraceItem|</traceitem>
        </traceitems>
        <variables />
        <preparation>
          <title />
          <ttfunction>
            <title>Initialize all signals</title>
            <name>ResetSignals</name>
          </ttfunction>
        </preparation>
        <breakonfail>false</breakonfail>
        <statechange>
          <title>Ensure initial state 'Unlocked'</title>
          <in>
            <assignment>
              <sink>
                <dbobject>DBSignal_BEGIN_OF_OBJECT|1|NodeOrFrameData_BEGIN_OF_OBJECT|1|1|CAN|2|comfort||END_OF_OBJECT_NodeOrFrameData|FrameData_BEGIN_OF_OBJECT|1|255|255|0|0|LockingRemoteControlRequest|1|False|END_OF_OBJECT_FrameData|LockRequest|1|END_OF_OBJECT_|</dbobject>
              </sink>
              <source>
                <valuetable_entry>Request_unlock</valuetable_entry>
              </source>
            </assignment>
          </in>
          <wait>
            <value>
              <const>200</const>
            </value>
            <unit>ms</unit>
          </wait>
          <expected>
            <compare>
              <value>
                <dbobject>DBSignal_BEGIN_OF_OBJECT|1|NodeOrFrameData_BEGIN_OF_OBJECT|1|1|CAN|2|comfort||END_OF_OBJECT_NodeOrFrameData|FrameData_BEGIN_OF_OBJECT|1|255|255|0|0|CentralLockingSystemState|0|False|END_OF_OBJECT_FrameData|LockState|1|END_OF_OBJECT_|</dbobject>
              </value>
              <eq>
                <valuetable_entry>Unlocked</valuetable_entry>
              </eq>
            </compare>
          </expected>
        </statechange>
        <set>
          <title>Start engine</title>
          <in>
            <assignment>
              <sink>
                <dbobject>DBSignal_BEGIN_OF_OBJECT|1|NodeOrFrameData_BEGIN_OF_OBJECT|1|1|CAN|1|comfort|SUT_Driver|END_OF_OBJECT_NodeOrFrameData|FrameData_BEGIN_OF_OBJECT|1|255|255|0|0|VehicleMotion|50|False|END_OF_OBJECT_FrameData|EngineRunning|1|END_OF_OBJECT_|</dbobject>
              </sink>
              <source>
                <const>1</const>
              </source>
            </assignment>
          </in>
        </set>
        <wait>
          <title />
          <time>
            <value>
              <const>500</const>
            </value>
            <unit>ms</unit>
          </time>
        </wait>
        <for>
          <title />
          <loopvar>loopIterator</loopvar>
          <loopvartype>int64</loopvartype>
          <startvalue>
            <const>0</const>
          </startvalue>
          <stopvalue>
            <const>5</const>
          </stopvalue>
          <increment>
            <const>1</const>
          </increment>
          <caplinline>
            <title>Speed up</title>
            <code>float currentVelocity;
currentVelocity = 6 * sqrt(20 * loopIterator);
TestStep("", "Speed up to %f ...", currentVelocity);
$Velocity = currentVelocity;</code>
          </caplinline>
          <wait>
            <title />
            <time>
              <value>
                <const>500</const>
              </value>
              <unit>ms</unit>
            </time>
          </wait>
        </for>
        <statecheck>
          <title>Check lock state at a speed of 150 km/h</title>
          <expected>
            <compare>
              <value>
                <dbobject>DBSignal_BEGIN_OF_OBJECT|1|NodeOrFrameData_BEGIN_OF_OBJECT|1|1|CAN|2|comfort||END_OF_OBJECT_NodeOrFrameData|FrameData_BEGIN_OF_OBJECT|1|255|255|0|0|CentralLockingSystemState|0|False|END_OF_OBJECT_FrameData|LockState|1|END_OF_OBJECT_|</dbobject>
              </value>
              <eq>
                <valuetable_entry>Locked</valuetable_entry>
              </eq>
            </compare>
          </expected>
        </statecheck>
        <while>
          <title>Decelerate</title>
          <compare>
            <value>
              <dbobject>DBSignal_BEGIN_OF_OBJECT|1|NodeOrFrameData_BEGIN_OF_OBJECT|1|1|CAN|1|comfort|SUT_Driver|END_OF_OBJECT_NodeOrFrameData|FrameData_BEGIN_OF_OBJECT|1|255|255|0|0|VehicleMotion|50|False|END_OF_OBJECT_FrameData|Velocity|1|END_OF_OBJECT_|</dbobject>
            </value>
            <gt>
              <const>0</const>
            </gt>
          </compare>
          <caplinline>
            <title>Slow down</title>
            <code>float currentVelocity;
currentVelocity = $Velocity - 10;
TestStep("", "Slow down to %f ...", currentVelocity);
$Velocity = currentVelocity;</code>
          </caplinline>
          <wait>
            <title />
            <time>
              <value>
                <const>500</const>
              </value>
              <unit>ms</unit>
            </time>
          </wait>
        </while>
        <statecheck>
          <title>Check lock state is still 'Locked' after halt</title>
          <expected>
            <compare>
              <value>
                <dbobject>DBSignal_BEGIN_OF_OBJECT|1|NodeOrFrameData_BEGIN_OF_OBJECT|1|1|CAN|2|comfort||END_OF_OBJECT_NodeOrFrameData|FrameData_BEGIN_OF_OBJECT|1|255|255|0|0|CentralLockingSystemState|0|False|END_OF_OBJECT_FrameData|LockState|1|END_OF_OBJECT_|</dbobject>
              </value>
              <eq>
                <valuetable_entry>Locked</valuetable_entry>
              </eq>
            </compare>
          </expected>
        </statecheck>
        <comment>
          <title>Check lock state behavior on engine stop - dependent on country setting</title>
        </comment>
        <if>
          <title />
          <compare>
            <value>
              <dbobject>ChParScalar_BEGIN_OF_OBJECT|1|UnlockDoorOnEngineStop|END_OF_OBJECT_ChParScalar|</dbobject>
            </value>
            <eq>
              <const>1</const>
            </eq>
          </compare>
          <statecheck>
            <title>Check automatic unlock</title>
            <expected>
              <compare>
                <value>
                  <dbobject>DBSignal_BEGIN_OF_OBJECT|1|NodeOrFrameData_BEGIN_OF_OBJECT|1|1|CAN|2|comfort||END_OF_OBJECT_NodeOrFrameData|FrameData_BEGIN_OF_OBJECT|1|255|255|0|0|CentralLockingSystemState|0|False|END_OF_OBJECT_FrameData|LockState|1|END_OF_OBJECT_|</dbobject>
                </value>
                <eq>
                  <valuetable_entry>Unlocked</valuetable_entry>
                </eq>
              </compare>
            </expected>
          </statecheck>
        </if>
        <else>
          <title />
          <statecheck>
            <title>Check no automatic unlock</title>
            <expected>
              <compare>
                <value>
                  <dbobject>DBSignal_BEGIN_OF_OBJECT|1|NodeOrFrameData_BEGIN_OF_OBJECT|1|1|CAN|2|comfort||END_OF_OBJECT_NodeOrFrameData|FrameData_BEGIN_OF_OBJECT|1|255|255|0|0|CentralLockingSystemState|0|False|END_OF_OBJECT_FrameData|LockState|1|END_OF_OBJECT_|</dbobject>
                </value>
                <eq>
                  <valuetable_entry>Locked</valuetable_entry>
                </eq>
              </compare>
            </expected>
          </statecheck>
        </else>
        <canoestandardservice>
          <title>Add capture of graphic window to the report</title>
          <name>testReportAddWindowCapture</name>
          <param>
            <type>char[]</type>
            <value>
              <const>Graphic</const>
            </value>
          </param>
          <param>
            <type>char[]</type>
            <value>
              <const />
            </value>
          </param>
          <param>
            <type>char[]</type>
            <value>
              <const>Velocity dependent lock state:</const>
            </value>
          </param>
        </canoestandardservice>
        <completion>
          <title />
          <ttfunction>
            <title>Reset all signals</title>
            <name>ResetSignals</name>
          </ttfunction>
        </completion>
      </tc>
      <tc>
        <title>Check locking behavior with velocity waveform</title>
        <tcid>2d3a6250-0c46-48b5-817a-b384940bdcc5</tcid>
        <attributes>
          <attr>
            <key>Lifecycle</key>
            <value>finished</value>
          </attr>
          <attr>
            <key>Note</key>
            <value />
          </attr>
        </attributes>
        <traceitems>
          <traceitem>TraceItem_BEGIN_OF_OBJECT|1|a31342c143aea0ddc86635|END_OF_OBJECT_TraceItem|</traceitem>
          <traceitem>TraceItem_BEGIN_OF_OBJECT|1|a31342c143aea0ddc8663b|END_OF_OBJECT_TraceItem|</traceitem>
        </traceitems>
        <breakonfail>false</breakonfail>
        <ttfunction>
          <title>Initialize all signals</title>
          <name>ResetSignals</name>
        </ttfunction>
        <waveform_stimulus>
          <title>Stimulate velocity via 'StimulateVelocity' and execute checkpoints from 'ExpectedLockState'</title>
          <stimulus>
            <curve>Waveform_BEGIN_OF_OBJECT|1|LockAutomaticallyTester::StimulateVelocity|END_OF_OBJECT_Waveform|</curve>
            <symbol>DBSignal_BEGIN_OF_OBJECT|1|NodeOrFrameData_BEGIN_OF_OBJECT|1|1|CAN|1|comfort|SUT_Driver|END_OF_OBJECT_NodeOrFrameData|FrameData_BEGIN_OF_OBJECT|1|255|255|0|0|VehicleMotion|50|False|END_OF_OBJECT_FrameData|Velocity|1|END_OF_OBJECT_|</symbol>
          </stimulus>
          <stimulus>
            <curve>Waveform_BEGIN_OF_OBJECT|1|LockAutomaticallyTester::ExpectedLockState|END_OF_OBJECT_Waveform|</curve>
            <symbol />
          </stimulus>
          <wait_until_finished>
            <bool>true</bool>
          </wait_until_finished>
        </waveform_stimulus>
      </tc>
      <comment>
        <title>The following test sequence is only relevant for Coverage 'Medium' and 'Full'</title>
      </comment>
      <ts navid="1fb2e61f-4ec4-47cd-9384-eb602f240a30">
        <title>Apply crash with different velocities</title>
        <active>true</active>
        <variables />
        <variantdependencies>
          <compare>
            <value>
              <dbobject>VarProp_BEGIN_OF_OBJECT|1|Coverage|END_OF_OBJECT_VarProp|</dbobject>
            </value>
            <ge>
              <valuetable_entry>Medium</valuetable_entry>
            </ge>
          </compare>
        </variantdependencies>
        <breakonfail>false</breakonfail>
        <comment>
          <title>Iterate through all velocities defined in the parameter file; execute test with corresponding velocities</title>
        </comment>
        <foreach>
          <title />
          <loopvar>currVelocity</loopvar>
          <listparameter>ChParList_BEGIN_OF_OBJECT|1|LockingTests::VelocityList|END_OF_OBJECT_ChParList|</listparameter>
          <tc>
            <title>Crash detection when car is moving</title>
            <tcid>91360866-9ce0-4e7e-a612-f74be4cbef39</tcid>
            <attributes>
              <attr>
                <key>Lifecycle</key>
                <value>finished</value>
              </attr>
              <attr>
                <key>Note</key>
                <value />
              </attr>
            </attributes>
            <variables />
            <comment>
              <title>Set the test case name dynamically, containing the current velocity</title>
            </comment>
            <caplinline>
              <title>Set test case name</title>
              <code>char buffer[64];
snprintf(buffer,elcount(buffer),"Crash detection when car is moving with velocity %d", currVelocity);
TestCaseTitle("", buffer);</code>
            </caplinline>
            <ttfunction>
              <title>Initialize all input signals</title>
              <name>ResetSignals</name>
            </ttfunction>
            <set>
              <title>Set velocity to execute test with</title>
              <in>
                <assignment>
                  <sink>
                    <dbobject>DBSignal_BEGIN_OF_OBJECT|1|NodeOrFrameData_BEGIN_OF_OBJECT|1|1|CAN|1|comfort|SUT_Driver|END_OF_OBJECT_NodeOrFrameData|FrameData_BEGIN_OF_OBJECT|1|255|255|0|0|VehicleMotion|50|False|END_OF_OBJECT_FrameData|Velocity|1|END_OF_OBJECT_|</dbobject>
                  </sink>
                  <source>
                    <variable>currVelocity</variable>
                  </source>
                </assignment>
              </in>
            </set>
            <statechange>
              <title>Apply a crash. Check if the car has been opened</title>
              <in>
                <assignment>
                  <sink>
                    <dbobject>DBSignal_BEGIN_OF_OBJECT|1|NodeOrFrameData_BEGIN_OF_OBJECT|1|1|CAN|2|comfort||END_OF_OBJECT_NodeOrFrameData|FrameData_BEGIN_OF_OBJECT|1|255|255|0|0|VehicleMotion|50|False|END_OF_OBJECT_FrameData|CrashDetected|1|END_OF_OBJECT_|</dbobject>
                  </sink>
                  <source>
                    <const>1</const>
                  </source>
                </assignment>
              </in>
              <wait>
                <value>
                  <const>500</const>
                </value>
                <unit>ms</unit>
              </wait>
              <expected>
                <compare>
                  <value>
                    <dbobject>DBSignal_BEGIN_OF_OBJECT|1|NodeOrFrameData_BEGIN_OF_OBJECT|1|1|CAN|2|comfort||END_OF_OBJECT_NodeOrFrameData|FrameData_BEGIN_OF_OBJECT|1|255|255|0|0|CentralLockingSystemState|0|False|END_OF_OBJECT_FrameData|LockState|1|END_OF_OBJECT_|</dbobject>
                  </value>
                  <eq>
                    <valuetable_entry>Unlocked</valuetable_entry>
                  </eq>
                </compare>
              </expected>
            </statechange>
            <set>
              <title>Reset the crash signal</title>
              <in>
                <assignment>
                  <sink>
                    <dbobject>DBSignal_BEGIN_OF_OBJECT|1|NodeOrFrameData_BEGIN_OF_OBJECT|1|1|CAN|2|comfort||END_OF_OBJECT_NodeOrFrameData|FrameData_BEGIN_OF_OBJECT|1|255|255|0|0|VehicleMotion|50|False|END_OF_OBJECT_FrameData|CrashDetected|1|END_OF_OBJECT_|</dbobject>
                  </sink>
                  <source>
                    <const>0</const>
                  </source>
                </assignment>
              </in>
            </set>
            <wait>
              <title />
              <time>
                <value>
                  <const>500</const>
                </value>
                <unit>ms</unit>
              </time>
            </wait>
            <ttfunction>
              <title>Reset all signals</title>
              <name>ResetSignals</name>
            </ttfunction>
          </tc>
        </foreach>
      </ts>
      <tc>
        <title>Lock dependent on velocity and crash detection</title>
        <tcid>dfbfaf8e-928d-410b-bff8-c64569099b03</tcid>
        <attributes>
          <attr>
            <key>Lifecycle</key>
            <value>in implementation</value>
          </attr>
          <attr>
            <key>Note</key>
            <value>Use test sequence with loop around test cases instead?</value>
          </attr>
        </attributes>
        <traceitems>
          <traceitem>TraceItem_BEGIN_OF_OBJECT|1|a31342c143aea0ddc86635|END_OF_OBJECT_TraceItem|</traceitem>
          <traceitem>TraceItem_BEGIN_OF_OBJECT|1|a31342c143aea0ddc8663b|END_OF_OBJECT_TraceItem|</traceitem>
        </traceitems>
        <foreach>
          <title>Iterate through all relevant locking test vectors</title>
          <loopvar>testVector</loopvar>
          <listparameter>ChParStList_BEGIN_OF_OBJECT|1|LockingTests::DoorLockData|END_OF_OBJECT_ChParStList|</listparameter>
          <ttfunction>
            <title>Initialize all signals</title>
            <name>ResetSignals</name>
          </ttfunction>
          <set>
            <title />
            <in>
              <assignment>
                <sink>
                  <dbobject>DBSignal_BEGIN_OF_OBJECT|1|NodeOrFrameData_BEGIN_OF_OBJECT|1|1|CAN|1|comfort|SUT_Driver|END_OF_OBJECT_NodeOrFrameData|FrameData_BEGIN_OF_OBJECT|1|255|255|0|0|VehicleMotion|50|False|END_OF_OBJECT_FrameData|EngineRunning|1|END_OF_OBJECT_|</dbobject>
                </sink>
                <source>
                  <variable>testVector.Engine</variable>
                </source>
              </assignment>
            </in>
          </set>
          <wait>
            <title />
            <time>
              <value>
                <const>500</const>
              </value>
              <unit>ms</unit>
            </time>
          </wait>
          <statechange>
            <title>Ensure initial state 'Unlocked'</title>
            <in>
              <assignment>
                <sink>
                  <dbobject>DBSignal_BEGIN_OF_OBJECT|1|NodeOrFrameData_BEGIN_OF_OBJECT|1|1|CAN|1|comfort|SUT_Driver|END_OF_OBJECT_NodeOrFrameData|FrameData_BEGIN_OF_OBJECT|1|255|255|0|0|LockingRemoteControlRequest|1|False|END_OF_OBJECT_FrameData|LockRequest|1|END_OF_OBJECT_|</dbobject>
                </sink>
                <source>
                  <valuetable_entry>Request_unlock</valuetable_entry>
                </source>
              </assignment>
            </in>
            <wait>
              <value>
                <const>500</const>
              </value>
              <unit>ms</unit>
            </wait>
            <expected>
              <compare>
                <value>
                  <dbobject>DBSignal_BEGIN_OF_OBJECT|1|NodeOrFrameData_BEGIN_OF_OBJECT|1|1|CAN|1|comfort|SUT|END_OF_OBJECT_NodeOrFrameData|FrameData_BEGIN_OF_OBJECT|1|255|255|0|0|CentralLockingSystemState|0|False|END_OF_OBJECT_FrameData|LockState|1|END_OF_OBJECT_|</dbobject>
                </value>
                <eq>
                  <valuetable_entry>Unlocked</valuetable_entry>
                </eq>
              </compare>
            </expected>
          </statechange>
          <statechange>
            <title>Apply test vector of stimulation and expected values</title>
            <in>
              <assignment>
                <sink>
                  <dbobject>DBSignal_BEGIN_OF_OBJECT|1|NodeOrFrameData_BEGIN_OF_OBJECT|1|1|CAN|1|comfort|SUT_Driver|END_OF_OBJECT_NodeOrFrameData|FrameData_BEGIN_OF_OBJECT|1|255|255|0|0|VehicleMotion|50|False|END_OF_OBJECT_FrameData|Velocity|1|END_OF_OBJECT_|</dbobject>
                </sink>
                <source>
                  <variable>testVector.Velocity</variable>
                </source>
              </assignment>
              <assignment>
                <sink>
                  <dbobject>DBSignal_BEGIN_OF_OBJECT|1|NodeOrFrameData_BEGIN_OF_OBJECT|1|1|CAN|1|comfort|SUT_Driver|END_OF_OBJECT_NodeOrFrameData|FrameData_BEGIN_OF_OBJECT|1|255|255|0|0|VehicleMotion|50|False|END_OF_OBJECT_FrameData|CrashDetected|1|END_OF_OBJECT_|</dbobject>
                </sink>
                <source>
                  <variable>testVector.CrashDetected</variable>
                </source>
              </assignment>
            </in>
            <wait>
              <value>
                <const>250</const>
              </value>
              <unit>ms</unit>
            </wait>
            <expected>
              <compare>
                <value>
                  <dbobject>DBSignal_BEGIN_OF_OBJECT|1|NodeOrFrameData_BEGIN_OF_OBJECT|1|1|CAN|1|comfort|SUT|END_OF_OBJECT_NodeOrFrameData|FrameData_BEGIN_OF_OBJECT|1|255|255|0|0|CentralLockingSystemState|0|False|END_OF_OBJECT_FrameData|LockState|1|END_OF_OBJECT_|</dbobject>
                </value>
                <eq>
                  <variable>testVector.LockState</variable>
                </eq>
              </compare>
            </expected>
          </statechange>
        </foreach>
        <ttfunction>
          <title>Reset all signals</title>
          <name>ResetSignals</name>
        </ttfunction>
      </tc>
      <tttestcaselist>
        <title>Lock with car moving/not moving</title>
        <name>LockingBehavior</name>
        <combinatorics>sequential</combinatorics>
        <structlistparameter>
          <dbobject>ChParStList_BEGIN_OF_OBJECT|1|LockingTests::LockingTestVectorList|END_OF_OBJECT_ChParStList|</dbobject>
        </structlistparameter>
        <param>
          <type>int</type>
          <structlistmember_parameter>
            <dbobject>ChParList_BEGIN_OF_OBJECT|1|LockingTests::LockingTestVectorList.EngineRunning|END_OF_OBJECT_ChParList|</dbobject>
          </structlistmember_parameter>
        </param>
        <param>
          <type>int</type>
          <structlistmember_parameter>
            <dbobject>ChParList_BEGIN_OF_OBJECT|1|LockingTests::LockingTestVectorList.IsMoving|END_OF_OBJECT_ChParList|</dbobject>
          </structlistmember_parameter>
        </param>
        <param>
          <type>int</type>
          <structlistmember_parameter>
            <dbobject>ChParList_BEGIN_OF_OBJECT|1|LockingTests::LockingTestVectorList.Crash|END_OF_OBJECT_ChParList|</dbobject>
          </structlistmember_parameter>
        </param>
        <param>
          <type>int</type>
          <structlistmember_parameter>
            <dbobject>ChParList_BEGIN_OF_OBJECT|1|LockingTests::LockingTestVectorList.ExpectedLockState|END_OF_OBJECT_ChParList|</dbobject>
          </structlistmember_parameter>
        </param>
        <test_case_caption>For engine = {engineRunning}, moving = {isMoving} and applied crash = {crash}, check lock state == {expectedLockState}</test_case_caption>
        <tcid>1bfceadf-4fcc-44db-8866-adb627991988</tcid>
        <attributes>
          <attr>
            <key>Lifecycle</key>
            <value>finished</value>
          </attr>
          <attr>
            <key>Note</key>
            <value>Candidate for classification tree.</value>
          </attr>
        </attributes>
        <singlecall_traceitems>
          <structlistparameter>
            <dbobject>ChParStList_BEGIN_OF_OBJECT|1|LockingTests::LockingTestVectorList|END_OF_OBJECT_ChParStList|</dbobject>
          </structlistparameter>
        </singlecall_traceitems>
      </tttestcaselist>
    </tf>
    <tg navid="5e37d69a-f840-4f8b-a4fe-55d89136eda4">
      <title>Comfort close</title>
      <tc>
        <title>Open and comfort close</title>
        <tcid>0d4f7b4c-8c8d-4b7c-ac8f-ac0e9563fca2</tcid>
        <attributes>
          <attr>
            <key>Lifecycle</key>
            <value>finished</value>
          </attr>
          <attr>
            <key>Note</key>
            <value />
          </attr>
        </attributes>
        <preparation>
          <title />
          <ttfunction>
            <title>Initialize all signals</title>
            <name>ResetSignals</name>
          </ttfunction>
          <cycletime_abs>
            <title>Check max. cycle time of message 'CentralLockingSystemState' 110 ms</title>
            <checkid />
            <message>
              <canmsg>
                <dbobject>DBFrameOrPDU_BEGIN_OF_OBJECT|2|NodeOrFrameData_BEGIN_OF_OBJECT|1|1|CAN|1|comfort|SUT|END_OF_OBJECT_NodeOrFrameData|FrameData_BEGIN_OF_OBJECT|1|255|255|0|0|CentralLockingSystemState|0|False|END_OF_OBJECT_FrameData|4|0|END_OF_OBJECT_|</dbobject>
              </canmsg>
            </message>
            <max>
              <value>
                <const>110</const>
              </value>
              <unit>ms</unit>
            </max>
          </cycletime_abs>
          <cycletime_abs>
            <title>Check max. cycle time of message 'WindowState' 110 ms</title>
            <checkid />
            <message>
              <canmsg>
                <dbobject>DBFrameOrPDU_BEGIN_OF_OBJECT|2|NodeOrFrameData_BEGIN_OF_OBJECT|1|1|CAN|1|comfort|SUT|END_OF_OBJECT_NodeOrFrameData|FrameData_BEGIN_OF_OBJECT|1|255|255|0|0|WindowState|100|False|END_OF_OBJECT_FrameData|4|0|END_OF_OBJECT_|</dbobject>
              </canmsg>
            </message>
            <max>
              <value>
                <const>110</const>
              </value>
              <unit>ms</unit>
            </max>
          </cycletime_abs>
        </preparation>
        <set>
          <title>Open the window</title>
          <in>
            <assignment>
              <sink>
                <dbobject>DBSignal_BEGIN_OF_OBJECT|1|NodeOrFrameData_BEGIN_OF_OBJECT|1|1|CAN|1|comfort|SUT_Driver|END_OF_OBJECT_NodeOrFrameData|FrameData_BEGIN_OF_OBJECT|1|255|255|0|0|WindowControl|101|False|END_OF_OBJECT_FrameData|KeyDown|1|END_OF_OBJECT_|</dbobject>
              </sink>
              <source>
                <const>1</const>
              </source>
            </assignment>
          </in>
        </set>
        <wait>
          <title />
          <time>
            <value>
              <const>5000</const>
            </value>
            <unit>ms</unit>
          </time>
        </wait>
        <set>
          <title>Release key</title>
          <in>
            <assignment>
              <sink>
                <dbobject>DBSignal_BEGIN_OF_OBJECT|1|NodeOrFrameData_BEGIN_OF_OBJECT|1|1|CAN|1|comfort|SUT_Driver|END_OF_OBJECT_NodeOrFrameData|FrameData_BEGIN_OF_OBJECT|1|255|255|0|0|WindowControl|101|False|END_OF_OBJECT_FrameData|KeyDown|1|END_OF_OBJECT_|</dbobject>
              </sink>
              <source>
                <const>0</const>
              </source>
            </assignment>
          </in>
        </set>
        <wait>
          <title />
          <time>
            <value>
              <const>100</const>
            </value>
            <unit>ms</unit>
          </time>
        </wait>
        <statechange>
          <title>Try the comfort close and check if the window is really closing</title>
          <in>
            <assignment>
              <sink>
                <dbobject>DBSignal_BEGIN_OF_OBJECT|1|NodeOrFrameData_BEGIN_OF_OBJECT|1|1|CAN|1|comfort|SUT_Driver|END_OF_OBJECT_NodeOrFrameData|FrameData_BEGIN_OF_OBJECT|1|255|255|0|0|LockingRemoteControlRequest|1|False|END_OF_OBJECT_FrameData|LockRequest|1|END_OF_OBJECT_|</dbobject>
              </sink>
              <source>
                <valuetable_entry>Comfort_lock</valuetable_entry>
              </source>
            </assignment>
          </in>
          <wait>
            <value>
              <const>4000</const>
            </value>
            <unit>ms</unit>
          </wait>
          <expected>
            <compare>
              <value>
                <dbobject>DBSignal_BEGIN_OF_OBJECT|1|NodeOrFrameData_BEGIN_OF_OBJECT|1|1|CAN|1|comfort|SUT|END_OF_OBJECT_NodeOrFrameData|FrameData_BEGIN_OF_OBJECT|1|255|255|0|0|WindowState|100|False|END_OF_OBJECT_FrameData|WindowMotion|1|END_OF_OBJECT_|</dbobject>
              </value>
              <eq>
                <valuetable_entry>currently_closing</valuetable_entry>
              </eq>
            </compare>
          </expected>
        </statechange>
        <statechange>
          <title>Check if the window stops moving when the car is opened again</title>
          <in>
            <assignment>
              <sink>
                <dbobject>DBSignal_BEGIN_OF_OBJECT|1|NodeOrFrameData_BEGIN_OF_OBJECT|1|1|CAN|1|comfort|SUT_Driver|END_OF_OBJECT_NodeOrFrameData|FrameData_BEGIN_OF_OBJECT|1|255|255|0|0|LockingRemoteControlRequest|1|False|END_OF_OBJECT_FrameData|LockRequest|1|END_OF_OBJECT_|</dbobject>
              </sink>
              <source>
                <valuetable_entry>Request_unlock</valuetable_entry>
              </source>
            </assignment>
          </in>
          <wait>
            <value>
              <const>100</const>
            </value>
            <unit>ms</unit>
          </wait>
          <expected>
            <compare>
              <value>
                <dbobject>DBSignal_BEGIN_OF_OBJECT|1|NodeOrFrameData_BEGIN_OF_OBJECT|1|1|CAN|1|comfort|SUT|END_OF_OBJECT_NodeOrFrameData|FrameData_BEGIN_OF_OBJECT|1|255|255|0|0|WindowState|100|False|END_OF_OBJECT_FrameData|WindowMotion|1|END_OF_OBJECT_|</dbobject>
              </value>
              <eq>
                <valuetable_entry>not_moving</valuetable_entry>
              </eq>
            </compare>
          </expected>
        </statechange>
        <completion>
          <title />
          <set>
            <title>Reset window state</title>
            <in>
              <assignment>
                <sink>
                  <dbobject>DBSignal_BEGIN_OF_OBJECT|1|NodeOrFrameData_BEGIN_OF_OBJECT|1|1|CAN|1|comfort|SUT|END_OF_OBJECT_NodeOrFrameData|FrameData_BEGIN_OF_OBJECT|1|255|255|0|0|WindowState|100|False|END_OF_OBJECT_FrameData|WindowMotion|1|END_OF_OBJECT_|</dbobject>
                </sink>
                <source>
                  <valuetable_entry>not_moving</valuetable_entry>
                </source>
              </assignment>
              <assignment>
                <sink>
                  <dbobject>DBSignal_BEGIN_OF_OBJECT|1|NodeOrFrameData_BEGIN_OF_OBJECT|1|1|CAN|1|comfort|SUT|END_OF_OBJECT_NodeOrFrameData|FrameData_BEGIN_OF_OBJECT|1|255|255|0|0|WindowState|100|False|END_OF_OBJECT_FrameData|WindowPosition|1|END_OF_OBJECT_|</dbobject>
                </sink>
                <source>
                  <const>0</const>
                </source>
              </assignment>
            </in>
          </set>
          <ttfunction>
            <title>Reset all signals</title>
            <name>ResetSignals</name>
          </ttfunction>
        </completion>
      </tc>
    </tg>
    <tg navid="b706842b-d28b-49ee-b35b-daf714a7599f">
      <title>Diagnostics</title>
      <active>true</active>
      <variantdependencies>
        <compare>
          <value>
            <dbobject>VarProp_BEGIN_OF_OBJECT|1|Coverage|END_OF_OBJECT_VarProp|</dbobject>
          </value>
          <eq>
            <valuetable_entry>Full</valuetable_entry>
          </eq>
        </compare>
      </variantdependencies>
      <comment>
        <title>Diagnostics for door control unit is tested with window lifter</title>
      </comment>
      <tttestcase>
        <title>Ambiguous request KeyUp/KeyDown with engine off</title>
        <name>AmbiguousKeyRequest</name>
        <param>
          <type>int</type>
          <value>
            <const>0</const>
          </value>
        </param>
        <tcid>93258bc2-c70b-437a-ba34-581480932d74</tcid>
        <attributes>
          <attr>
            <key>Lifecycle</key>
            <value>ready for review</value>
          </attr>
          <attr>
            <key>Note</key>
            <value>Use test case list instead?</value>
          </attr>
        </attributes>
      </tttestcase>
      <tttestcase>
        <title>Ambiguous request KeyUp/KeyDown with engine running</title>
        <name>AmbiguousKeyRequest</name>
        <param>
          <type>int</type>
          <value>
            <const>1</const>
          </value>
        </param>
        <tcid>b20bf39f-2c25-469c-8464-cadf266bdf53</tcid>
        <attributes>
          <attr>
            <key>Lifecycle</key>
            <value>ready for review</value>
          </attr>
          <attr>
            <key>Note</key>
            <value>Use test case list instead?</value>
          </attr>
        </attributes>
      </tttestcase>
      <tc>
        <title>Variant coding</title>
        <tcid>bee29e59-4de2-4565-b33d-118881811b08</tcid>
        <attributes>
          <attr>
            <key>Lifecycle</key>
            <value>finished</value>
          </attr>
          <attr>
            <key>Note</key>
            <value />
          </attr>
        </attributes>
        <faultmem_clear>
          <title>Clear fault memory of SUT in order to get a defined precondition</title>
          <ecu>DiaObj_BEGIN_OF_OBJECT|2|0|SUT|||||0||END_OF_OBJECT_DiaObj|</ecu>
          <reportservicedetails>
            <enum>onfail</enum>
          </reportservicedetails>
          <dtcs />
        </faultmem_clear>
        <diagservice>
          <title>Activate Extended Session</title>
          <service>DiaObj_BEGIN_OF_OBJECT|2|2|SUT|Sessions|ExtendedDiagnosticSession_Start|||0||END_OF_OBJECT_DiaObj|</service>
          <reportservicedetails>
            <enum>onfail</enum>
          </reportservicedetails>
          <diagrequest />
          <diagresponse />
        </diagservice>
        <diagservice>
          <title>Write Variant Coding while ECU is locked --&gt; Expected result: Security access denied</title>
          <service>DiaObj_BEGIN_OF_OBJECT|2|2|SUT|VariantCoding|Coding_Write|||0||END_OF_OBJECT_DiaObj|</service>
          <readbeforewrite>
            <bool>true</bool>
          </readbeforewrite>
          <result>
            <enum>neg</enum>
          </result>
          <reportservicedetails>
            <enum>onfail</enum>
          </reportservicedetails>
          <diagrequest>
            <diagparam>
              <qualifier>DiaVal_BEGIN_OF_OBJECT|2|4|SUT|VariantCoding|Coding_Write|WDBI_RQ|Codingstring.CountryType|0||END_OF_OBJECT_DiaVal|</qualifier>
              <phys>
                <valuetable_entry>USA</valuetable_entry>
              </phys>
            </diagparam>
            <diagparam>
              <qualifier>DiaVal_BEGIN_OF_OBJECT|2|4|SUT|VariantCoding|Coding_Write|WDBI_RQ|Codingstring.SpecialAdjustment|0||END_OF_OBJECT_DiaVal|</qualifier>
              <phys>
                <const>0x42</const>
              </phys>
            </diagparam>
          </diagrequest>
          <diagresponse>
            <primitive>DiaObj_BEGIN_OF_OBJECT|2|3|SUT|VariantCoding|Coding_Write|WDBI_NR||2||END_OF_OBJECT_DiaObj|</primitive>
            <diagparam>
              <qualifier>DiaVal_BEGIN_OF_OBJECT|2|4|SUT|VariantCoding|Coding_Write|WDBI_NR|RC|2||END_OF_OBJECT_DiaVal|</qualifier>
              <phys>
                <eq>
                  <valuetable_entry>Security access denied</valuetable_entry>
                </eq>
              </phys>
            </diagparam>
          </diagresponse>
        </diagservice>
        <faultmem_dtcs>
          <title>Check whether the corresponding DTC was stored (Variant Coding Illegal Access)</title>
          <ecu>DiaObj_BEGIN_OF_OBJECT|2|0|SUT|||||0||END_OF_OBJECT_DiaObj|</ecu>
          <reportservicedetails>
            <enum>always</enum>
          </reportservicedetails>
          <dtc_content>
            <dtc>
              <dtcdb>DiaObj_BEGIN_OF_OBJECT|2|5|SUT|P000002|Error sample 002|||2||END_OF_OBJECT_DiaObj|</dtcdb>
            </dtc>
          </dtc_content>
        </faultmem_dtcs>
        <diagunlock>
          <title>Unlock ECU using configured Seed &amp; Key DLL</title>
          <ecu>DiaObj_BEGIN_OF_OBJECT|2|0|SUT|||||0||END_OF_OBJECT_DiaObj|</ecu>
          <reportservicedetails>
            <enum>onfail</enum>
          </reportservicedetails>
          <securitylevel>
            <const>1</const>
          </securitylevel>
        </diagunlock>
        <faultmem_clear>
          <title>Clear fault memory again</title>
          <ecu>DiaObj_BEGIN_OF_OBJECT|2|0|SUT|||||0||END_OF_OBJECT_DiaObj|</ecu>
          <dtcs />
        </faultmem_clear>
        <diagservice>
          <title>Write Variant Coding while ECU is unlocked (CountryType=USA, SpecialAdjustment=0x77) --&gt; should work this time</title>
          <service>DiaObj_BEGIN_OF_OBJECT|2|2|SUT|VariantCoding|Coding_Write|||0||END_OF_OBJECT_DiaObj|</service>
          <readbeforewrite>
            <bool>true</bool>
          </readbeforewrite>
          <result>
            <enum>pos</enum>
          </result>
          <reportservicedetails>
            <enum>always</enum>
          </reportservicedetails>
          <diagrequest>
            <diagparam>
              <qualifier>DiaVal_BEGIN_OF_OBJECT|2|4|SUT|VariantCoding|Coding_Write|WDBI_RQ|Codingstring.CountryType|0||END_OF_OBJECT_DiaVal|</qualifier>
              <phys>
                <valuetable_entry>USA</valuetable_entry>
              </phys>
            </diagparam>
            <diagparam>
              <qualifier>DiaVal_BEGIN_OF_OBJECT|2|4|SUT|VariantCoding|Coding_Write|WDBI_RQ|Codingstring.SpecialAdjustment|0||END_OF_OBJECT_DiaVal|</qualifier>
              <phys>
                <const>0x77</const>
              </phys>
            </diagparam>
          </diagrequest>
          <diagresponse />
        </diagservice>
        <faultmem_dtcs>
          <title>Check that the corresponding DTC was not set (Variant Coding Illegal Access)</title>
          <ecu>DiaObj_BEGIN_OF_OBJECT|2|0|SUT|||||0||END_OF_OBJECT_DiaObj|</ecu>
          <reportservicedetails>
            <enum>always</enum>
          </reportservicedetails>
          <dtc_content>
            <occurrence>
              <enum>notallowed</enum>
            </occurrence>
            <dtc>
              <dtcdb>DiaObj_BEGIN_OF_OBJECT|2|5|SUT|P000002|Error sample 002|||2||END_OF_OBJECT_DiaObj|</dtcdb>
            </dtc>
          </dtc_content>
        </faultmem_dtcs>
        <diagservice>
          <title>Check if Variant Coding was correctly written (CountryType==USA, SpecialAdjustment==0x77, VehicleType==Coupe)</title>
          <service>DiaObj_BEGIN_OF_OBJECT|2|2|SUT|VariantCoding|Coding_Read|||0||END_OF_OBJECT_DiaObj|</service>
          <result>
            <enum>pos</enum>
          </result>
          <reportservicedetails>
            <enum>always</enum>
          </reportservicedetails>
          <diagrequest />
          <diagresponse>
            <primitive>DiaObj_BEGIN_OF_OBJECT|2|3|SUT|VariantCoding|Coding_Read|RDBI_PR||1||END_OF_OBJECT_DiaObj|</primitive>
            <diagparam>
              <qualifier>DiaVal_BEGIN_OF_OBJECT|2|4|SUT|VariantCoding|Coding_Read|RDBI_PR|Codingstring.CountryType|1||END_OF_OBJECT_DiaVal|</qualifier>
              <phys>
                <eq>
                  <valuetable_entry>USA</valuetable_entry>
                </eq>
              </phys>
            </diagparam>
            <diagparam>
              <qualifier>DiaVal_BEGIN_OF_OBJECT|2|4|SUT|VariantCoding|Coding_Read|RDBI_PR|Codingstring.SpecialAdjustment|1||END_OF_OBJECT_DiaVal|</qualifier>
              <phys>
                <eq>
                  <const>0x77</const>
                </eq>
              </phys>
            </diagparam>
            <diagparam>
              <qualifier>DiaVal_BEGIN_OF_OBJECT|2|4|SUT|VariantCoding|Coding_Read|RDBI_PR|Codingstring.VehicleType|1||END_OF_OBJECT_DiaVal|</qualifier>
              <phys>
                <eq>
                  <valuetable_entry>Coupe</valuetable_entry>
                </eq>
              </phys>
            </diagparam>
          </diagresponse>
        </diagservice>
      </tc>
    </tg>
  </tt>
  <ttlib>
    <ts_definitions />
    <tc_definitions>
      <tc_definition>
        <name>AmbiguousKeyRequest</name>
        <description>Checks that a corresponding fault memory entry is created when ambiguous values of KeyUp and KeyDown occur</description>
        <tcid>3c7f2b05-c303-4508-a196-5306a8df989f</tcid>
        <parameters>
          <parameter_definition>
            <name>engineRunning</name>
            <type>int</type>
          </parameter_definition>
        </parameters>
        <preparation>
          <title />
          <set>
            <title>Initialize signals</title>
            <in>
              <assignment>
                <sink>
                  <dbobject>DBSignal_BEGIN_OF_OBJECT|1|NodeOrFrameData_BEGIN_OF_OBJECT|1|1|CAN|1|comfort|SUT_Driver|END_OF_OBJECT_NodeOrFrameData|FrameData_BEGIN_OF_OBJECT|1|255|255|0|0|WindowControl|101|False|END_OF_OBJECT_FrameData|KeyDown|1|END_OF_OBJECT_|</dbobject>
                </sink>
                <source>
                  <const>0</const>
                </source>
              </assignment>
              <assignment>
                <sink>
                  <dbobject>DBSignal_BEGIN_OF_OBJECT|1|NodeOrFrameData_BEGIN_OF_OBJECT|1|1|CAN|1|comfort|SUT_Driver|END_OF_OBJECT_NodeOrFrameData|FrameData_BEGIN_OF_OBJECT|1|255|255|0|0|WindowControl|101|False|END_OF_OBJECT_FrameData|KeyUp|1|END_OF_OBJECT_|</dbobject>
                </sink>
                <source>
                  <const>0</const>
                </source>
              </assignment>
            </in>
          </set>
        </preparation>
        <breakonfail>false</breakonfail>
        <set>
          <title />
          <in>
            <assignment>
              <sink>
                <dbobject>DBSignal_BEGIN_OF_OBJECT|1|NodeOrFrameData_BEGIN_OF_OBJECT|1|1|CAN|1|comfort|SUT_Driver|END_OF_OBJECT_NodeOrFrameData|FrameData_BEGIN_OF_OBJECT|1|255|255|0|0|VehicleMotion|50|False|END_OF_OBJECT_FrameData|EngineRunning|1|END_OF_OBJECT_|</dbobject>
              </sink>
              <source>
                <variable>engineRunning</variable>
              </source>
            </assignment>
          </in>
        </set>
        <faultmem_clear>
          <title>Clear fault memory of SUT</title>
          <ecu>DiaObj_BEGIN_OF_OBJECT|2|0|SUT|||||0||END_OF_OBJECT_DiaObj|</ecu>
          <dtcs />
        </faultmem_clear>
        <statechange>
          <title>Concurrently set request KeyUp and KeyDown</title>
          <in>
            <assignment>
              <sink>
                <dbobject>DBSignal_BEGIN_OF_OBJECT|1|NodeOrFrameData_BEGIN_OF_OBJECT|1|1|CAN|1|comfort|SUT_Driver|END_OF_OBJECT_NodeOrFrameData|FrameData_BEGIN_OF_OBJECT|1|255|255|0|0|WindowControl|101|False|END_OF_OBJECT_FrameData|KeyUp|1|END_OF_OBJECT_|</dbobject>
              </sink>
              <source>
                <const>1</const>
              </source>
            </assignment>
            <assignment>
              <sink>
                <dbobject>DBSignal_BEGIN_OF_OBJECT|1|NodeOrFrameData_BEGIN_OF_OBJECT|1|1|CAN|1|comfort|SUT_Driver|END_OF_OBJECT_NodeOrFrameData|FrameData_BEGIN_OF_OBJECT|1|255|255|0|0|WindowControl|101|False|END_OF_OBJECT_FrameData|KeyDown|1|END_OF_OBJECT_|</dbobject>
              </sink>
              <source>
                <const>1</const>
              </source>
            </assignment>
          </in>
          <wait>
            <value>
              <const>100</const>
            </value>
            <unit>ms</unit>
          </wait>
          <expected>
            <compare>
              <value>
                <dbobject>DBSignal_BEGIN_OF_OBJECT|1|NodeOrFrameData_BEGIN_OF_OBJECT|1|1|CAN|1|comfort|SUT|END_OF_OBJECT_NodeOrFrameData|FrameData_BEGIN_OF_OBJECT|1|255|255|0|0|WindowState|100|False|END_OF_OBJECT_FrameData|WindowMotion|1|END_OF_OBJECT_|</dbobject>
              </value>
              <eq>
                <valuetable_entry>not_moving</valuetable_entry>
              </eq>
            </compare>
          </expected>
        </statechange>
        <faultmem_status>
          <title>Check that a the corresponding DTC has been created</title>
          <ecu>DiaObj_BEGIN_OF_OBJECT|2|0|SUT|||||0||END_OF_OBJECT_DiaObj|</ecu>
          <reportservicedetails>
            <enum>onfail</enum>
          </reportservicedetails>
          <dtcstatusuds>
            <status_test_failed>
              <bool>true</bool>
            </status_test_failed>
            <status_failed_since_last_clear>
              <bool>true</bool>
            </status_failed_since_last_clear>
          </dtcstatusuds>
          <expected_dtccount>
            <eq>
              <const>1</const>
            </eq>
          </expected_dtccount>
        </faultmem_status>
        <faultmem_clear>
          <title>Reset fault memory</title>
          <active>true</active>
          <ecu>DiaObj_BEGIN_OF_OBJECT|2|0|SUT|||||0||END_OF_OBJECT_DiaObj|</ecu>
          <reportservicedetails>
            <enum>onfail</enum>
          </reportservicedetails>
          <dtcs />
        </faultmem_clear>
        <completion>
          <title />
          <set>
            <title>Reset signals</title>
            <in>
              <assignment>
                <sink>
                  <dbobject>DBSignal_BEGIN_OF_OBJECT|1|NodeOrFrameData_BEGIN_OF_OBJECT|1|1|CAN|1|comfort|SUT_Driver|END_OF_OBJECT_NodeOrFrameData|FrameData_BEGIN_OF_OBJECT|1|255|255|0|0|WindowControl|101|False|END_OF_OBJECT_FrameData|KeyDown|1|END_OF_OBJECT_|</dbobject>
                </sink>
                <source>
                  <const>0</const>
                </source>
              </assignment>
              <assignment>
                <sink>
                  <dbobject>DBSignal_BEGIN_OF_OBJECT|1|NodeOrFrameData_BEGIN_OF_OBJECT|1|1|CAN|1|comfort|SUT_Driver|END_OF_OBJECT_NodeOrFrameData|FrameData_BEGIN_OF_OBJECT|1|255|255|0|0|WindowControl|101|False|END_OF_OBJECT_FrameData|KeyUp|1|END_OF_OBJECT_|</dbobject>
                </sink>
                <source>
                  <const>0</const>
                </source>
              </assignment>
            </in>
          </set>
        </completion>
      </tc_definition>
      <tc_definition>
        <name>LockingBehavior</name>
        <tcid>ecd1d157-445c-4f4b-af6f-a7b719e1c688</tcid>
        <parameters>
          <parameter_definition>
            <name>engineRunning</name>
            <type>int</type>
          </parameter_definition>
          <parameter_definition>
            <name>isMoving</name>
            <type>int</type>
          </parameter_definition>
          <parameter_definition>
            <name>crash</name>
            <type>int</type>
          </parameter_definition>
          <parameter_definition>
            <name>expectedLockState</name>
            <type>int</type>
          </parameter_definition>
        </parameters>
        <preparation>
          <title />
          <ttfunction>
            <title>Initialize all input signals</title>
            <name>ResetSignals</name>
          </ttfunction>
        </preparation>
        <set>
          <title />
          <in>
            <assignment>
              <sink>
                <dbobject>DBSignal_BEGIN_OF_OBJECT|1|NodeOrFrameData_BEGIN_OF_OBJECT|1|1|CAN|1|comfort|SUT_Driver|END_OF_OBJECT_NodeOrFrameData|FrameData_BEGIN_OF_OBJECT|1|255|255|0|0|VehicleMotion|50|False|END_OF_OBJECT_FrameData|EngineRunning|1|END_OF_OBJECT_|</dbobject>
              </sink>
              <source>
                <variable>engineRunning</variable>
              </source>
            </assignment>
          </in>
        </set>
        <set>
          <title>Set lock state to be locked</title>
          <in>
            <assignment>
              <sink>
                <dbobject>DBSignal_BEGIN_OF_OBJECT|1|NodeOrFrameData_BEGIN_OF_OBJECT|1|1|CAN|1|comfort|SUT_Driver|END_OF_OBJECT_NodeOrFrameData|FrameData_BEGIN_OF_OBJECT|1|255|255|0|0|LockingRemoteControlRequest|1|False|END_OF_OBJECT_FrameData|LockRequest|1|END_OF_OBJECT_|</dbobject>
              </sink>
              <source>
                <valuetable_entry>Request_lock</valuetable_entry>
              </source>
            </assignment>
          </in>
        </set>
        <if>
          <title>Set velocity if the car is moving</title>
          <compare>
            <value>
              <variable>isMoving</variable>
            </value>
            <eq>
              <const>1</const>
            </eq>
          </compare>
          <set>
            <title />
            <in>
              <assignment>
                <sink>
                  <dbobject>DBSignal_BEGIN_OF_OBJECT|1|NodeOrFrameData_BEGIN_OF_OBJECT|1|1|CAN|1|comfort|SUT_Driver|END_OF_OBJECT_NodeOrFrameData|FrameData_BEGIN_OF_OBJECT|1|255|255|0|0|VehicleMotion|50|False|END_OF_OBJECT_FrameData|Velocity|1|END_OF_OBJECT_|</dbobject>
                </sink>
                <source>
                  <const>100</const>
                </source>
              </assignment>
            </in>
          </set>
        </if>
        <wait>
          <title />
          <time>
            <value>
              <const>200</const>
            </value>
            <unit>ms</unit>
          </time>
        </wait>
        <statechange>
          <title>Apply crash state from the parameter. Check the LockState</title>
          <in>
            <assignment>
              <sink>
                <dbobject>DBSignal_BEGIN_OF_OBJECT|1|NodeOrFrameData_BEGIN_OF_OBJECT|1|1|CAN|2|comfort||END_OF_OBJECT_NodeOrFrameData|FrameData_BEGIN_OF_OBJECT|1|255|255|0|0|VehicleMotion|50|False|END_OF_OBJECT_FrameData|CrashDetected|1|END_OF_OBJECT_|</dbobject>
              </sink>
              <source>
                <variable>crash</variable>
              </source>
            </assignment>
          </in>
          <wait>
            <value>
              <const>500</const>
            </value>
            <unit>ms</unit>
          </wait>
          <expected>
            <compare>
              <value>
                <dbobject>DBSignal_BEGIN_OF_OBJECT|1|NodeOrFrameData_BEGIN_OF_OBJECT|1|1|CAN|2|comfort||END_OF_OBJECT_NodeOrFrameData|FrameData_BEGIN_OF_OBJECT|1|255|255|0|0|CentralLockingSystemState|0|False|END_OF_OBJECT_FrameData|LockState|1|END_OF_OBJECT_|</dbobject>
              </value>
              <eq>
                <variable>expectedLockState</variable>
              </eq>
            </compare>
          </expected>
        </statechange>
        <completion>
          <title />
          <ttfunction>
            <title>Reset all signals</title>
            <name>ResetSignals</name>
          </ttfunction>
        </completion>
      </tc_definition>
    </tc_definitions>
    <function_definitions>
      <function_definition navid="47337ac5-56d6-4b6d-865c-2286877a2d2b">
        <name>ResetSignals</name>
        <description>Resets all input signals of the door lock tests</description>
        <parameters />
        <set>
          <title>Reset all signals</title>
          <in>
            <assignment>
              <sink>
                <dbobject>DBSignal_BEGIN_OF_OBJECT|1|NodeOrFrameData_BEGIN_OF_OBJECT|1|1|CAN|2|comfort||END_OF_OBJECT_NodeOrFrameData|FrameData_BEGIN_OF_OBJECT|1|255|255|0|0|VehicleMotion|50|False|END_OF_OBJECT_FrameData|EngineRunning|1|END_OF_OBJECT_|</dbobject>
              </sink>
              <source>
                <const>0</const>
              </source>
            </assignment>
            <assignment>
              <sink>
                <dbobject>DBSignal_BEGIN_OF_OBJECT|1|NodeOrFrameData_BEGIN_OF_OBJECT|1|1|CAN|1|comfort|SUT_Driver|END_OF_OBJECT_NodeOrFrameData|FrameData_BEGIN_OF_OBJECT|1|255|255|0|0|VehicleMotion|50|False|END_OF_OBJECT_FrameData|Velocity|1|END_OF_OBJECT_|</dbobject>
              </sink>
              <source>
                <const>0</const>
              </source>
            </assignment>
            <assignment>
              <sink>
                <dbobject>DBSignal_BEGIN_OF_OBJECT|1|NodeOrFrameData_BEGIN_OF_OBJECT|1|1|CAN|1|comfort|SUT_Driver|END_OF_OBJECT_NodeOrFrameData|FrameData_BEGIN_OF_OBJECT|1|255|255|0|0|VehicleMotion|50|False|END_OF_OBJECT_FrameData|CrashDetected|1|END_OF_OBJECT_|</dbobject>
              </sink>
              <source>
                <const>0</const>
              </source>
            </assignment>
            <assignment>
              <sink>
                <dbobject>DBSignal_BEGIN_OF_OBJECT|1|NodeOrFrameData_BEGIN_OF_OBJECT|1|1|CAN|1|comfort|SUT_Driver|END_OF_OBJECT_NodeOrFrameData|FrameData_BEGIN_OF_OBJECT|1|255|255|0|0|LockingRemoteControlRequest|1|False|END_OF_OBJECT_FrameData|LockRequest|1|END_OF_OBJECT_|</dbobject>
              </sink>
              <source>
                <valuetable_entry>idle</valuetable_entry>
              </source>
            </assignment>
          </in>
        </set>
        <set>
          <title>No acceleration/deceleration</title>
          <in>
            <assignment>
              <sink>
                <dbobject>SysVar_BEGIN_OF_OBJECT|1|Accelerate|SystemUnderTest|255|0|END_OF_OBJECT_SysVar|</dbobject>
              </sink>
              <source>
                <const>0</const>
              </source>
            </assignment>
            <assignment>
              <sink>
                <dbobject>SysVar_BEGIN_OF_OBJECT|1|Decelerate|SystemUnderTest|255|0|END_OF_OBJECT_SysVar|</dbobject>
              </sink>
              <source>
                <const>0</const>
              </source>
            </assignment>
          </in>
        </set>
        <wait>
          <title />
          <active>false</active>
          <time>
            <value>
              <const>500</const>
            </value>
            <unit>ms</unit>
          </time>
        </wait>
        <caplinline>
          <title />
          <code>testWaitForTimeoutSilent(500);</code>
        </caplinline>
      </function_definition>
    </function_definitions>
  </ttlib>
</ttroot>